{"remainingRequest":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/babel-loader/lib/index.js!/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/src/plugins/websocket.js","dependencies":[{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/src/plugins/websocket.js","mtime":1614970755627},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHNvY2tldCA9IG5ldyBXZWJTb2NrZXQoIndzOi8vbG9jYWxob3N0OjgwMDAvd3MiKTsKY29uc29sZS5sb2coJ1NvY2tldCBpbml0aWFsaXplZCcpOwoKZnVuY3Rpb24gc29ja2V0Q2hlY2soY2FsbGJhY2spIHsKICBpZiAoc29ja2V0LnJlYWR5U3RhdGUgPT09IDEpIHsKICAgIGNhbGxiYWNrKCk7CiAgfSBlbHNlIHsKICAgIHNvY2tldC5vbm9wZW4gPSBmdW5jdGlvbiAoKSB7CiAgICAgIGNhbGxiYWNrKCk7CiAgICB9OwogIH0KfQoKZXhwb3J0IHsgc29ja2V0LCBzb2NrZXRDaGVjayB9Ow=="},{"version":3,"sources":["/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/src/plugins/websocket.js"],"names":["socket","WebSocket","console","log","socketCheck","callback","readyState","onopen"],"mappings":"AAAA,IAAMA,MAAM,GAAG,IAAIC,SAAJ,CAAc,wBAAd,CAAf;AACAC,OAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA8B;AAC1B,MAAGL,MAAM,CAACM,UAAP,KAAsB,CAAzB,EAA2B;AAC3BD,IAAAA,QAAQ;AACT,GAFC,MAGE;AACFL,IAAAA,MAAM,CAACO,MAAP,GAAgB,YAAM;AACtBF,MAAAA,QAAQ;AACT,KAFC;AAGD;AACF;;AACD,SAAQL,MAAR,EAAgBI,WAAhB","sourcesContent":["const socket = new WebSocket(\"ws://localhost:8000/ws\");\nconsole.log('Socket initialized')\n\nfunction socketCheck(callback){\n    if(socket.readyState === 1){\n    callback()\n  }\n  else{\n    socket.onopen = () => {\n    callback()\n  };\n  }\n}\nexport {socket, socketCheck};"]}]}