{"remainingRequest":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/src/components/SearchBar.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/src/components/SearchBar.vue","mtime":1615057106953},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/sobiaa/Colorifix_Forms/frontend/colorifix_forms_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXV0b2NvbXBsZXRlLXNpemUgewogIHdpZHRoOiA1MDBweDsKfQo="},{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-autocomplete\n  v-model=\"inputVal\"\n    class=\"mx-auto autocomplete-size\"\n    placeholder=\"Start typing to search\"\n    dense\n    prepend-icon=\"mdi-magnify\"\n    item-text=\"label\"\n    return-object\n    @click=\"getItems\"\n    ref=\"search\"\n    color=\"rgb(255, 168, 20)\"\n    item-color=\"rgb(255, 168, 20)\"\n    dark\n    @input=\"searchInput=null\"\n    :search-input.sync=\"searchInput\"\n  ></v-autocomplete>\n</template>\n<script>\nexport default {\n  name: \"SearchBar\",\n  data: () => {\n    return {\n        searchInput: null\n    };\n  },\n  props: [\"filteredForms\", \"autocomplete\"],\n  methods: {\n    customFilter(item, queryText) {\n      const text = item.label.toLowerCase();\n      const searchText = queryText.toLowerCase();\n      return text.indexOf(searchText) > -1;\n    },\n    getItems(){\n        console.log(this.$refs.search)\n    }\n  },\n  computed: {\n    inputVal: {\n        get() {\n            return this.autocomplete;\n        },\n        set(autocomplete) {\n            this.$emit('input', [autocomplete]);\n        }\n    }\n  }\n};\n</script>\n<style>\n.autocomplete-size {\n  width: 500px;\n}\n</style>\n"]}]}